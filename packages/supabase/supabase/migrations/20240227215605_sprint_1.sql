create table "public"."landlord_private_profiles" (
    "user_id" uuid not null,
    "phone_number" character varying(20) not null,
    "postcode" character varying(7) not null,
    "country" character varying(20) not null,
    "county" character varying(20),
    "city" character varying(20),
    "street" character varying(20),
    "house" character varying(20) not null,
    "first_name" text,
    "last_name" text
);


alter table "public"."landlord_private_profiles" enable row level security;

create table "public"."landlord_public_profiles" (
    "user_id" uuid not null,
    "website" character varying(50),
    "bio" character varying(200),
    "profile_image_id" uuid,
    "verified" boolean not null,
    "type" character(1) not null,
    "display_email" text not null,
    "display_name" text not null
);


alter table "public"."landlord_public_profiles" enable row level security;

create table "public"."properties" (
    "id" uuid not null default gen_random_uuid(),
    "address" text not null,
    "baths" smallint,
    "beds" smallint,
    "country" text,
    "county" text,
    "description" text,
    "house" text,
    "postcode" text,
    "property_type" text,
    "street" text
);


alter table "public"."properties" enable row level security;

create table "public"."property_ownership" (
    "property_id" uuid not null,
    "started_at" date not null,
    "landlord_id" uuid not null,
    "ended_at" date
);


alter table "public"."property_ownership" enable row level security;

create table "public"."review_photos" (
    "review_id" uuid not null,
    "photo_id" bigint not null
);


alter table "public"."review_photos" enable row level security;

create table "public"."reviewer_private_profiles" (
    "user_id" uuid not null,
    "property_id" uuid not null,
    "reviewer_id" uuid not null default gen_random_uuid()
);


alter table "public"."reviewer_private_profiles" enable row level security;

create table "public"."reviews" (
    "property_id" uuid not null,
    "reviewer_id" uuid not null,
    "review_date" date not null,
    "review_id" uuid not null default gen_random_uuid(),
    "landlord_rating" smallint not null,
    "property_rating" smallint not null,
    "review_body" text not null
);


alter table "public"."reviews" enable row level security;

create table "public"."uploaded_files" (
    "id" bigint generated by default as identity not null,
    "file_name" text
);


alter table "public"."uploaded_files" enable row level security;

create table "public"."user_profiles" (
    "user_id" uuid not null,
    "email" text,
    "created_at" date default now()
);


alter table "public"."user_profiles" enable row level security;

CREATE UNIQUE INDEX landlord_private_profiles_pkey ON public.landlord_private_profiles USING btree (user_id);

CREATE UNIQUE INDEX landlord_public_profiles_pkey ON public.landlord_public_profiles USING btree (user_id);

CREATE UNIQUE INDEX properties_address_key ON public.properties USING btree (address);

CREATE UNIQUE INDEX properties_pkey ON public.properties USING btree (id);

CREATE UNIQUE INDEX property_ownership_pkey ON public.property_ownership USING btree (property_id, started_at);

CREATE UNIQUE INDEX review_photos_pkey ON public.review_photos USING btree (review_id, photo_id);

CREATE UNIQUE INDEX reviewer_ids_pkey ON public.reviewer_private_profiles USING btree (user_id, property_id);

CREATE UNIQUE INDEX reviewer_ids_reviewer_id_key ON public.reviewer_private_profiles USING btree (reviewer_id);

CREATE UNIQUE INDEX reviewer_private_profiles_user_id_property_id_key ON public.reviewer_private_profiles USING btree (user_id, property_id);

CREATE UNIQUE INDEX reviews_pkey ON public.reviews USING btree (review_id);

CREATE UNIQUE INDEX reviews_property_id_reviewer_id_key ON public.reviews USING btree (property_id, reviewer_id);

CREATE UNIQUE INDEX uploaded_files_pkey ON public.uploaded_files USING btree (id);

CREATE UNIQUE INDEX user_public_profiles_pkey ON public.user_profiles USING btree (user_id);

alter table "public"."landlord_private_profiles" add constraint "landlord_private_profiles_pkey" PRIMARY KEY using index "landlord_private_profiles_pkey";

alter table "public"."landlord_public_profiles" add constraint "landlord_public_profiles_pkey" PRIMARY KEY using index "landlord_public_profiles_pkey";

alter table "public"."properties" add constraint "properties_pkey" PRIMARY KEY using index "properties_pkey";

alter table "public"."property_ownership" add constraint "property_ownership_pkey" PRIMARY KEY using index "property_ownership_pkey";

alter table "public"."review_photos" add constraint "review_photos_pkey" PRIMARY KEY using index "review_photos_pkey";

alter table "public"."reviewer_private_profiles" add constraint "reviewer_ids_pkey" PRIMARY KEY using index "reviewer_ids_pkey";

alter table "public"."reviews" add constraint "reviews_pkey" PRIMARY KEY using index "reviews_pkey";

alter table "public"."uploaded_files" add constraint "uploaded_files_pkey" PRIMARY KEY using index "uploaded_files_pkey";

alter table "public"."user_profiles" add constraint "user_public_profiles_pkey" PRIMARY KEY using index "user_public_profiles_pkey";

alter table "public"."landlord_private_profiles" add constraint "landlord_private_profiles_id_fkey" FOREIGN KEY (user_id) REFERENCES user_profiles(user_id) not valid;

alter table "public"."landlord_private_profiles" validate constraint "landlord_private_profiles_id_fkey";

alter table "public"."landlord_public_profiles" add constraint "landlord_public_profiles_id_fkey" FOREIGN KEY (user_id) REFERENCES landlord_private_profiles(user_id) not valid;

alter table "public"."landlord_public_profiles" validate constraint "landlord_public_profiles_id_fkey";

alter table "public"."properties" add constraint "properties_address_key" UNIQUE using index "properties_address_key";

alter table "public"."property_ownership" add constraint "property_ownership_landlord_id_fkey" FOREIGN KEY (landlord_id) REFERENCES landlord_public_profiles(user_id) not valid;

alter table "public"."property_ownership" validate constraint "property_ownership_landlord_id_fkey";

alter table "public"."property_ownership" add constraint "property_ownership_property_id_fkey" FOREIGN KEY (property_id) REFERENCES properties(id) not valid;

alter table "public"."property_ownership" validate constraint "property_ownership_property_id_fkey";

alter table "public"."review_photos" add constraint "review_photos_photo_id_fkey" FOREIGN KEY (photo_id) REFERENCES uploaded_files(id) not valid;

alter table "public"."review_photos" validate constraint "review_photos_photo_id_fkey";

alter table "public"."review_photos" add constraint "review_photos_review_id_fkey" FOREIGN KEY (review_id) REFERENCES reviews(review_id) not valid;

alter table "public"."review_photos" validate constraint "review_photos_review_id_fkey";

alter table "public"."reviewer_private_profiles" add constraint "reviewer_ids_reviewer_id_key" UNIQUE using index "reviewer_ids_reviewer_id_key";

alter table "public"."reviewer_private_profiles" add constraint "reviewer_private_profiles_property_id_fkey" FOREIGN KEY (property_id) REFERENCES properties(id) not valid;

alter table "public"."reviewer_private_profiles" validate constraint "reviewer_private_profiles_property_id_fkey";

alter table "public"."reviewer_private_profiles" add constraint "reviewer_private_profiles_user_id_fkey" FOREIGN KEY (user_id) REFERENCES user_profiles(user_id) not valid;

alter table "public"."reviewer_private_profiles" validate constraint "reviewer_private_profiles_user_id_fkey";

alter table "public"."reviewer_private_profiles" add constraint "reviewer_private_profiles_user_id_property_id_key" UNIQUE using index "reviewer_private_profiles_user_id_property_id_key";

alter table "public"."reviews" add constraint "reviews_landlord_rating_check" CHECK (((landlord_rating >= 1) AND (landlord_rating <= 5))) not valid;

alter table "public"."reviews" validate constraint "reviews_landlord_rating_check";

alter table "public"."reviews" add constraint "reviews_property_id_fkey" FOREIGN KEY (property_id) REFERENCES properties(id) not valid;

alter table "public"."reviews" validate constraint "reviews_property_id_fkey";

alter table "public"."reviews" add constraint "reviews_property_id_reviewer_id_key" UNIQUE using index "reviews_property_id_reviewer_id_key";

alter table "public"."reviews" add constraint "reviews_property_rating_check" CHECK (((property_rating >= 1) AND (property_rating <= 5))) not valid;

alter table "public"."reviews" validate constraint "reviews_property_rating_check";

alter table "public"."reviews" add constraint "reviews_review_body_check" CHECK ((length(review_body) <= 1000)) not valid;

alter table "public"."reviews" validate constraint "reviews_review_body_check";

alter table "public"."reviews" add constraint "reviews_reviewer_id_fkey" FOREIGN KEY (reviewer_id) REFERENCES reviewer_private_profiles(reviewer_id) not valid;

alter table "public"."reviews" validate constraint "reviews_reviewer_id_fkey";

alter table "public"."user_profiles" add constraint "user_profiles_id_fkey" FOREIGN KEY (user_id) REFERENCES auth.users(id) not valid;

alter table "public"."user_profiles" validate constraint "user_profiles_id_fkey";

alter table "public"."user_profiles" add constraint "user_public_profiles_id_fkey" FOREIGN KEY (user_id) REFERENCES auth.users(id) not valid;

alter table "public"."user_profiles" validate constraint "user_public_profiles_id_fkey";

set check_function_bodies = off;

CREATE OR REPLACE FUNCTION public.create_profile_for_user()
 RETURNS trigger
 LANGUAGE plpgsql
 SECURITY DEFINER
AS $function$begin
  insert into public.user_profiles(user_id, email)
  values(new.id, new.email);
  
  return new;
end;$function$
;

CREATE TRIGGER create_profile_for_new_user AFTER INSERT ON auth.users FOR EACH ROW EXECUTE FUNCTION create_profile_for_user();

CREATE OR REPLACE FUNCTION public.get_average_property_rating(property_id uuid)
 RETURNS numeric
 LANGUAGE sql
 STABLE
AS $function$
  SELECT AVG(property_rating)
    FROM reviews
    WHERE reviews.property_id = get_average_property_rating.property_id;
$function$
;

CREATE OR REPLACE FUNCTION public.get_properties_with_ratings()
 RETURNS TABLE(property_id uuid, address text, average_rating numeric)
 LANGUAGE plpgsql
AS $function$
#variable_conflict use_column 
BEGIN
  RETURN QUERY select id as property_id, address, get_average_property_rating(id) as average_rating
  from properties;
END; $function$
;

grant delete on table "public"."landlord_private_profiles" to "anon";

grant insert on table "public"."landlord_private_profiles" to "anon";

grant references on table "public"."landlord_private_profiles" to "anon";

grant select on table "public"."landlord_private_profiles" to "anon";

grant trigger on table "public"."landlord_private_profiles" to "anon";

grant truncate on table "public"."landlord_private_profiles" to "anon";

grant update on table "public"."landlord_private_profiles" to "anon";

grant delete on table "public"."landlord_private_profiles" to "authenticated";

grant insert on table "public"."landlord_private_profiles" to "authenticated";

grant references on table "public"."landlord_private_profiles" to "authenticated";

grant select on table "public"."landlord_private_profiles" to "authenticated";

grant trigger on table "public"."landlord_private_profiles" to "authenticated";

grant truncate on table "public"."landlord_private_profiles" to "authenticated";

grant update on table "public"."landlord_private_profiles" to "authenticated";

grant delete on table "public"."landlord_private_profiles" to "service_role";

grant insert on table "public"."landlord_private_profiles" to "service_role";

grant references on table "public"."landlord_private_profiles" to "service_role";

grant select on table "public"."landlord_private_profiles" to "service_role";

grant trigger on table "public"."landlord_private_profiles" to "service_role";

grant truncate on table "public"."landlord_private_profiles" to "service_role";

grant update on table "public"."landlord_private_profiles" to "service_role";

grant delete on table "public"."landlord_public_profiles" to "anon";

grant insert on table "public"."landlord_public_profiles" to "anon";

grant references on table "public"."landlord_public_profiles" to "anon";

grant select on table "public"."landlord_public_profiles" to "anon";

grant trigger on table "public"."landlord_public_profiles" to "anon";

grant truncate on table "public"."landlord_public_profiles" to "anon";

grant update on table "public"."landlord_public_profiles" to "anon";

grant delete on table "public"."landlord_public_profiles" to "authenticated";

grant insert on table "public"."landlord_public_profiles" to "authenticated";

grant references on table "public"."landlord_public_profiles" to "authenticated";

grant select on table "public"."landlord_public_profiles" to "authenticated";

grant trigger on table "public"."landlord_public_profiles" to "authenticated";

grant truncate on table "public"."landlord_public_profiles" to "authenticated";

grant update on table "public"."landlord_public_profiles" to "authenticated";

grant delete on table "public"."landlord_public_profiles" to "service_role";

grant insert on table "public"."landlord_public_profiles" to "service_role";

grant references on table "public"."landlord_public_profiles" to "service_role";

grant select on table "public"."landlord_public_profiles" to "service_role";

grant trigger on table "public"."landlord_public_profiles" to "service_role";

grant truncate on table "public"."landlord_public_profiles" to "service_role";

grant update on table "public"."landlord_public_profiles" to "service_role";

grant delete on table "public"."properties" to "anon";

grant insert on table "public"."properties" to "anon";

grant references on table "public"."properties" to "anon";

grant select on table "public"."properties" to "anon";

grant trigger on table "public"."properties" to "anon";

grant truncate on table "public"."properties" to "anon";

grant update on table "public"."properties" to "anon";

grant delete on table "public"."properties" to "authenticated";

grant insert on table "public"."properties" to "authenticated";

grant references on table "public"."properties" to "authenticated";

grant select on table "public"."properties" to "authenticated";

grant trigger on table "public"."properties" to "authenticated";

grant truncate on table "public"."properties" to "authenticated";

grant update on table "public"."properties" to "authenticated";

grant delete on table "public"."properties" to "service_role";

grant insert on table "public"."properties" to "service_role";

grant references on table "public"."properties" to "service_role";

grant select on table "public"."properties" to "service_role";

grant trigger on table "public"."properties" to "service_role";

grant truncate on table "public"."properties" to "service_role";

grant update on table "public"."properties" to "service_role";

grant delete on table "public"."property_ownership" to "anon";

grant insert on table "public"."property_ownership" to "anon";

grant references on table "public"."property_ownership" to "anon";

grant select on table "public"."property_ownership" to "anon";

grant trigger on table "public"."property_ownership" to "anon";

grant truncate on table "public"."property_ownership" to "anon";

grant update on table "public"."property_ownership" to "anon";

grant delete on table "public"."property_ownership" to "authenticated";

grant insert on table "public"."property_ownership" to "authenticated";

grant references on table "public"."property_ownership" to "authenticated";

grant select on table "public"."property_ownership" to "authenticated";

grant trigger on table "public"."property_ownership" to "authenticated";

grant truncate on table "public"."property_ownership" to "authenticated";

grant update on table "public"."property_ownership" to "authenticated";

grant delete on table "public"."property_ownership" to "service_role";

grant insert on table "public"."property_ownership" to "service_role";

grant references on table "public"."property_ownership" to "service_role";

grant select on table "public"."property_ownership" to "service_role";

grant trigger on table "public"."property_ownership" to "service_role";

grant truncate on table "public"."property_ownership" to "service_role";

grant update on table "public"."property_ownership" to "service_role";

grant delete on table "public"."review_photos" to "anon";

grant insert on table "public"."review_photos" to "anon";

grant references on table "public"."review_photos" to "anon";

grant select on table "public"."review_photos" to "anon";

grant trigger on table "public"."review_photos" to "anon";

grant truncate on table "public"."review_photos" to "anon";

grant update on table "public"."review_photos" to "anon";

grant delete on table "public"."review_photos" to "authenticated";

grant insert on table "public"."review_photos" to "authenticated";

grant references on table "public"."review_photos" to "authenticated";

grant select on table "public"."review_photos" to "authenticated";

grant trigger on table "public"."review_photos" to "authenticated";

grant truncate on table "public"."review_photos" to "authenticated";

grant update on table "public"."review_photos" to "authenticated";

grant delete on table "public"."review_photos" to "service_role";

grant insert on table "public"."review_photos" to "service_role";

grant references on table "public"."review_photos" to "service_role";

grant select on table "public"."review_photos" to "service_role";

grant trigger on table "public"."review_photos" to "service_role";

grant truncate on table "public"."review_photos" to "service_role";

grant update on table "public"."review_photos" to "service_role";

grant delete on table "public"."reviewer_private_profiles" to "anon";

grant insert on table "public"."reviewer_private_profiles" to "anon";

grant references on table "public"."reviewer_private_profiles" to "anon";

grant select on table "public"."reviewer_private_profiles" to "anon";

grant trigger on table "public"."reviewer_private_profiles" to "anon";

grant truncate on table "public"."reviewer_private_profiles" to "anon";

grant update on table "public"."reviewer_private_profiles" to "anon";

grant delete on table "public"."reviewer_private_profiles" to "authenticated";

grant insert on table "public"."reviewer_private_profiles" to "authenticated";

grant references on table "public"."reviewer_private_profiles" to "authenticated";

grant select on table "public"."reviewer_private_profiles" to "authenticated";

grant trigger on table "public"."reviewer_private_profiles" to "authenticated";

grant truncate on table "public"."reviewer_private_profiles" to "authenticated";

grant update on table "public"."reviewer_private_profiles" to "authenticated";

grant delete on table "public"."reviewer_private_profiles" to "service_role";

grant insert on table "public"."reviewer_private_profiles" to "service_role";

grant references on table "public"."reviewer_private_profiles" to "service_role";

grant select on table "public"."reviewer_private_profiles" to "service_role";

grant trigger on table "public"."reviewer_private_profiles" to "service_role";

grant truncate on table "public"."reviewer_private_profiles" to "service_role";

grant update on table "public"."reviewer_private_profiles" to "service_role";

grant delete on table "public"."reviews" to "anon";

grant insert on table "public"."reviews" to "anon";

grant references on table "public"."reviews" to "anon";

grant select on table "public"."reviews" to "anon";

grant trigger on table "public"."reviews" to "anon";

grant truncate on table "public"."reviews" to "anon";

grant update on table "public"."reviews" to "anon";

grant delete on table "public"."reviews" to "authenticated";

grant insert on table "public"."reviews" to "authenticated";

grant references on table "public"."reviews" to "authenticated";

grant select on table "public"."reviews" to "authenticated";

grant trigger on table "public"."reviews" to "authenticated";

grant truncate on table "public"."reviews" to "authenticated";

grant update on table "public"."reviews" to "authenticated";

grant delete on table "public"."reviews" to "service_role";

grant insert on table "public"."reviews" to "service_role";

grant references on table "public"."reviews" to "service_role";

grant select on table "public"."reviews" to "service_role";

grant trigger on table "public"."reviews" to "service_role";

grant truncate on table "public"."reviews" to "service_role";

grant update on table "public"."reviews" to "service_role";

grant delete on table "public"."uploaded_files" to "anon";

grant insert on table "public"."uploaded_files" to "anon";

grant references on table "public"."uploaded_files" to "anon";

grant select on table "public"."uploaded_files" to "anon";

grant trigger on table "public"."uploaded_files" to "anon";

grant truncate on table "public"."uploaded_files" to "anon";

grant update on table "public"."uploaded_files" to "anon";

grant delete on table "public"."uploaded_files" to "authenticated";

grant insert on table "public"."uploaded_files" to "authenticated";

grant references on table "public"."uploaded_files" to "authenticated";

grant select on table "public"."uploaded_files" to "authenticated";

grant trigger on table "public"."uploaded_files" to "authenticated";

grant truncate on table "public"."uploaded_files" to "authenticated";

grant update on table "public"."uploaded_files" to "authenticated";

grant delete on table "public"."uploaded_files" to "service_role";

grant insert on table "public"."uploaded_files" to "service_role";

grant references on table "public"."uploaded_files" to "service_role";

grant select on table "public"."uploaded_files" to "service_role";

grant trigger on table "public"."uploaded_files" to "service_role";

grant truncate on table "public"."uploaded_files" to "service_role";

grant update on table "public"."uploaded_files" to "service_role";

grant delete on table "public"."user_profiles" to "anon";

grant insert on table "public"."user_profiles" to "anon";

grant references on table "public"."user_profiles" to "anon";

grant select on table "public"."user_profiles" to "anon";

grant trigger on table "public"."user_profiles" to "anon";

grant truncate on table "public"."user_profiles" to "anon";

grant update on table "public"."user_profiles" to "anon";

grant delete on table "public"."user_profiles" to "authenticated";

grant insert on table "public"."user_profiles" to "authenticated";

grant references on table "public"."user_profiles" to "authenticated";

grant select on table "public"."user_profiles" to "authenticated";

grant trigger on table "public"."user_profiles" to "authenticated";

grant truncate on table "public"."user_profiles" to "authenticated";

grant update on table "public"."user_profiles" to "authenticated";

grant delete on table "public"."user_profiles" to "service_role";

grant insert on table "public"."user_profiles" to "service_role";

grant references on table "public"."user_profiles" to "service_role";

grant select on table "public"."user_profiles" to "service_role";

grant trigger on table "public"."user_profiles" to "service_role";

grant truncate on table "public"."user_profiles" to "service_role";

grant update on table "public"."user_profiles" to "service_role";

create policy "Enable public access to landlord details"
on "public"."landlord_public_profiles"
as permissive
for select
to public
using (true);


create policy "Enable read access for all users"
on "public"."properties"
as permissive
for select
to public
using (true);


create policy "Enable read access for all users"
on "public"."property_ownership"
as permissive
for select
to public
using (true);


create policy "Enable read access for users own profiles"
on "public"."reviewer_private_profiles"
as permissive
for select
to public
using ((auth.uid() = user_id));


create policy "Enable read access for all users"
on "public"."reviews"
as permissive
for select
to public
using (true);


create policy "Allow users to get their own profile"
on "public"."user_profiles"
as permissive
for select
to public
using ((auth.uid() = user_id));



